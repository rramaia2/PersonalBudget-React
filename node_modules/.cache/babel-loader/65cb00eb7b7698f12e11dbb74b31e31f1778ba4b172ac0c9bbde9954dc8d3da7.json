{"ast":null,"code":"var _jsxFileName = \"D:\\\\cmder\\\\rramaia2\\\\NBAD\\\\dev\\\\FinalProject\\\\personal-budget-react\\\\src\\\\LoginPage\\\\LoginPage.js\",\n  _s = $RefreshSig$();\n// LoginPage.js\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('http://localhost:3002/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        if (userData.accessToken) {\n          // Call handleToken to set the token and expiration time in local storage\n          handleToken(userData.accessToken);\n          const decodedToken = decodeToken(userData.accessToken);\n          if (decodedToken && decodedToken.userId) {\n            const userId = decodedToken.userId;\n            const firstname = userData.firstname;\n            localStorage.setItem('userId', userId);\n            localStorage.setItem('firstname', firstname);\n            navigate('/homepage');\n          } else {\n            console.error('User ID not found in decoded token:', decodedToken);\n            toast.error('Invalid login credentials', {\n              position: toast.POSITION.TOP_CENTER\n            });\n          }\n        } else {\n          console.error('Access token not found in server response:', userData);\n        }\n      } else {\n        alert('Invalid login credentials');\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n  };\n  const handleToken = token => {\n    // Set the token in local storage\n    localStorage.setItem('token', token);\n\n    // Set the expiration time (e.g., 1 minute from now)\n    const expirationTime = new Date().getTime() + 60 * 1000; // 1 minute\n\n    localStorage.setItem('tokenExpiration', expirationTime);\n  };\n  const decodeToken = token => {\n    try {\n      const decodedString = atob(token.split('.')[1]);\n      const decodedObject = JSON.parse(decodedString);\n      return decodedObject;\n    } catch (error) {\n      console.error('Error decoding token:', error);\n      return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          autoComplete: \"current-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/register\",\n      className: \"register-button\",\n      children: \"If new user? Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"IIPwWddbiEHHD7aoL5eQeOR7fTk=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","Link","useNavigate","ToastContainer","toast","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","navigate","handleLogin","response","fetch","method","headers","body","JSON","stringify","ok","userData","json","accessToken","handleToken","decodedToken","decodeToken","userId","firstname","localStorage","setItem","console","error","position","POSITION","TOP_CENTER","alert","token","expirationTime","Date","getTime","decodedString","atob","split","decodedObject","parse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","autoComplete","onClick","to","_c","$RefreshReg$"],"sources":["D:/cmder/rramaia2/NBAD/dev/FinalProject/personal-budget-react/src/LoginPage/LoginPage.js"],"sourcesContent":["// LoginPage.js\r\nimport React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst LoginPage = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3002/api/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n\r\n        if (userData.accessToken) {\r\n          // Call handleToken to set the token and expiration time in local storage\r\n          handleToken(userData.accessToken);\r\n\r\n          const decodedToken = decodeToken(userData.accessToken);\r\n\r\n          if (decodedToken && decodedToken.userId) {\r\n            const userId = decodedToken.userId;\r\n            const firstname = userData.firstname;\r\n\r\n            localStorage.setItem('userId', userId);\r\n            localStorage.setItem('firstname', firstname);\r\n\r\n            navigate('/homepage');\r\n          } else {\r\n            console.error('User ID not found in decoded token:', decodedToken);\r\n            toast.error('Invalid login credentials', {\r\n              position: toast.POSITION.TOP_CENTER,\r\n            });\r\n          }\r\n        } else {\r\n          console.error('Access token not found in server response:', userData);\r\n        }\r\n      } else {\r\n        alert('Invalid login credentials');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n    }\r\n  };\r\n\r\n  const handleToken = (token) => {\r\n    // Set the token in local storage\r\n    localStorage.setItem('token', token);\r\n\r\n    // Set the expiration time (e.g., 1 minute from now)\r\n    const expirationTime = new Date().getTime() + 60 * 1000; // 1 minute\r\n\r\n    localStorage.setItem('tokenExpiration', expirationTime);\r\n  };\r\n\r\n  const decodeToken = (token) => {\r\n    try {\r\n      const decodedString = atob(token.split('.')[1]);\r\n      const decodedObject = JSON.parse(decodedString);\r\n      return decodedObject;\r\n    } catch (error) {\r\n      console.error('Error decoding token:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login Page</h2>\r\n      <form>\r\n        <label>\r\n          Username:\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Password:\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            autoComplete=\"current-password\"\r\n          />\r\n        </label>\r\n        <br />\r\n        <button type=\"button\" onClick={handleLogin}>\r\n          Login\r\n        </button>\r\n        <ToastContainer />\r\n      </form>\r\n      <Link to=\"/register\" className=\"register-button\">\r\n        If new user? Register\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}